{"version":3,"file":"component---src-components-pages-post-tsx-905117c8ca223b451947.js","mappings":"0LAkCA,EAhCkB,SAAqBA,GACrC,IAAIC,EAAUD,EAAKE,GACfA,OAAiB,IAAZD,EAAqB,iBAAmBA,EAC7CE,EAAYH,EAAKG,UACjBC,EAAaJ,EAAKK,MAClBA,OAAuB,IAAfD,EAAwB,GAAKA,EACrCE,EAAcN,EAAKO,OACnBA,OAAyB,IAAhBD,EAAyB,GAAKA,EACvCE,EAAmBR,EAAKS,YACxBA,OAAmC,IAArBD,EAA8B,QAAUA,EACtDE,EAAsBV,EAAKW,eAC3BA,OAAyC,IAAxBD,EAAiC,QAAUA,EAC5DE,EAAqBZ,EAAKa,cAC1BA,OAAuC,IAAvBD,EAAgC,QAAUA,EAC1DE,EAAad,EAAKe,MAClBA,OAAuB,IAAfD,EAAwB,eAAiBA,EACrD,OAAO,gBAAoB,MAAO,CAChCX,UAAWA,EACXD,GAAIA,EACJc,QAAS,YACTX,MAAOA,EACPE,OAAQA,EACRU,KAAM,OACNC,OAAQH,EACRF,cAAeA,EACfF,eAAgBA,EAChBF,YAAaA,GACZ,gBAAoB,OAAQ,CAC7BU,EAAG,wBCIP,EAhCiB,SAAoBnB,GACnC,IAAIC,EAAUD,EAAKE,GACfA,OAAiB,IAAZD,EAAqB,gBAAkBA,EAC5CE,EAAYH,EAAKG,UACjBC,EAAaJ,EAAKK,MAClBA,OAAuB,IAAfD,EAAwB,GAAKA,EACrCE,EAAcN,EAAKO,OACnBA,OAAyB,IAAhBD,EAAyB,GAAKA,EACvCE,EAAmBR,EAAKS,YACxBA,OAAmC,IAArBD,EAA8B,QAAUA,EACtDE,EAAsBV,EAAKW,eAC3BA,OAAyC,IAAxBD,EAAiC,QAAUA,EAC5DE,EAAqBZ,EAAKa,cAC1BA,OAAuC,IAAvBD,EAAgC,QAAUA,EAC1DE,EAAad,EAAKe,MAClBA,OAAuB,IAAfD,EAAwB,eAAiBA,EACrD,OAAO,gBAAoB,MAAO,CAChCX,UAAWA,EACXD,GAAIA,EACJc,QAAS,YACTX,MAAOA,EACPE,OAAQA,EACRU,KAAM,OACNC,OAAQH,EACRF,cAAeA,EACfF,eAAgBA,EAChBF,YAAaA,GACZ,gBAAoB,OAAQ,CAC7BU,EAAG,wB,wCC5BIC,EAAe,mCCqC1B,EA7Ba,SAAC,GAAkI,QAAhIC,YAAgI,IAAjHC,KAAQC,EAAyG,EAAzGA,MAAOC,EAAkG,EAAlGA,SAAUC,EAAwF,EAAxFA,QAASC,EAA+E,EAA/EA,KAAQC,EAAuE,EAAvEA,SAAUC,EAA6D,EAA7DA,KAC3EC,EAAO,MAEb,OACE,gBAACC,EAAA,EAAD,CAAQC,WAAWC,EAAAA,EAAAA,GAAcT,GAAQE,QAASA,GAChD,4BACE,gBAAC,EAAAQ,YAAD,KACGP,GAEH,gBAACQ,EAAA,EAAD,CAAUC,KAAMX,KAGlB,uBAAKrB,UDrBM,2BCsBT,wBAAMA,UAAciC,oCAA2B,MAAZT,EAAmBP,EAAe,KACtD,MAAZO,GACC,gBAAC,EAAAU,KAAD,CAAMC,GAAIX,EAASY,MAAM,gBAAC,EAAD,CAAalC,MAAOwB,EAAMtB,OAAQsB,IAA3D,KAAqEG,EAAAA,EAAAA,GAAcL,EAASJ,SAEhG,wBAAMpB,UDvBa,qCCwBjB,gBAAC,EAAAkC,KAAD,CAAMC,GAAI,UAAU,gBAAC,EAAD,CAAYjC,MAAOwB,EAAMtB,OAAQsB,IAArD,cAEF,wBAAM1B,UAAcqC,qCAA4B,MAAZb,EAAmBP,EAAe,KAC3D,MAARQ,GACC,gBAAC,EAAAS,KAAD,CAAMC,GAAIV,EAAKW,OAAOP,EAAAA,EAAAA,GAAcJ,EAAKL,OAAzC,IAAiD,gBAACkB,EAAA,EAAD,CAAcpC,MAAOwB,EAAMtB,OAAQsB","sources":["webpack://lutov-net/./node_modules/react-bytesize-icons/esm/ChevronLeft.js","webpack://lutov-net/./node_modules/react-bytesize-icons/esm/ChevronTop.js","webpack://lutov-net/./src/components/pages/Post.module.css","webpack://lutov-net/./src/components/pages/Post.tsx"],"sourcesContent":["import React from 'react';\n\nvar ChevronLeft = function ChevronLeft(_ref) {\n  var _ref$id = _ref.id,\n      id = _ref$id === void 0 ? \"i-chevron-left\" : _ref$id,\n      className = _ref.className,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 32 : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 32 : _ref$height,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? '6.25%' : _ref$strokeWidth,\n      _ref$strokeLinejoin = _ref.strokeLinejoin,\n      strokeLinejoin = _ref$strokeLinejoin === void 0 ? 'round' : _ref$strokeLinejoin,\n      _ref$strokeLinecap = _ref.strokeLinecap,\n      strokeLinecap = _ref$strokeLinecap === void 0 ? 'round' : _ref$strokeLinecap,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentcolor' : _ref$color;\n  return React.createElement(\"svg\", {\n    className: className,\n    id: id,\n    viewBox: \"0 0 32 32\",\n    width: width,\n    height: height,\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: strokeLinecap,\n    strokeLinejoin: strokeLinejoin,\n    strokeWidth: strokeWidth\n  }, React.createElement(\"path\", {\n    d: \"M20 30 L8 16 20 2\"\n  }));\n};\n\nexport default ChevronLeft;","import React from 'react';\n\nvar ChevronTop = function ChevronTop(_ref) {\n  var _ref$id = _ref.id,\n      id = _ref$id === void 0 ? \"i-chevron-top\" : _ref$id,\n      className = _ref.className,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 32 : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 32 : _ref$height,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? '6.25%' : _ref$strokeWidth,\n      _ref$strokeLinejoin = _ref.strokeLinejoin,\n      strokeLinejoin = _ref$strokeLinejoin === void 0 ? 'round' : _ref$strokeLinejoin,\n      _ref$strokeLinecap = _ref.strokeLinecap,\n      strokeLinecap = _ref$strokeLinecap === void 0 ? 'round' : _ref$strokeLinecap,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentcolor' : _ref$color;\n  return React.createElement(\"svg\", {\n    className: className,\n    id: id,\n    viewBox: \"0 0 32 32\",\n    width: width,\n    height: height,\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: strokeLinecap,\n    strokeLinejoin: strokeLinejoin,\n    strokeWidth: strokeWidth\n  }, React.createElement(\"path\", {\n    d: \"M30 20 L16 8 2 20\"\n  }));\n};\n\nexport default ChevronTop;","// extracted by mini-css-extract-plugin\nexport var nav = \"Post-module--nav--8R5Wn\";\nexport var navItemEmpty = \"Post-module--navItemEmpty--5TcMu\";\nexport var navItemLeft = \"Post-module--navItemLeft--EPLNr\";\nexport var navItemCenter = \"Post-module--navItemCenter--ufCat\";\nexport var navItemRight = \"Post-module--navItemRight--WH2Xf\";","import { Link, PageProps } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport React from \"react\"\nimport { ChevronLeft, ChevronRight, ChevronTop } from \"react-bytesize-icons\"\nimport applyTypograf from \"../../utils/applyTypograf\"\nimport Layout from \"../Layout\"\nimport PostedAt from \"../PostedAt\"\nimport { PageContext } from \"./Page\"\nimport { nav, navItemCenter, navItemEmpty, navItemLeft, navItemRight } from \"./Post.module.css\"\n\nconst Post = ({ pageContext: { node: { title, postedAt, srcPath, body }, previous, next } }: PageProps<never, PageContext>): React.ReactNode => {\n  const size = \"1em\" as unknown as number\n\n  return (\n    <Layout pageTitle={applyTypograf(title)} srcPath={srcPath}>\n      <main>\n        <MDXRenderer>\n          {body}\n        </MDXRenderer>\n        <PostedAt date={postedAt} />\n      </main>\n\n      <nav className={nav}>\n        <span className={`${navItemLeft} ${previous == null ? navItemEmpty : \"\"}`}>\n          {previous != null &&\n            <Link to={previous.path}><ChevronLeft width={size} height={size} /> {applyTypograf(previous.title)}</Link>}\n        </span>\n        <span className={navItemCenter}>\n          <Link to={\"/posts\"}><ChevronTop width={size} height={size} />All posts</Link>\n        </span>\n        <span className={`${navItemRight} ${previous == null ? navItemEmpty : \"\"}`}>\n          {next != null &&\n            <Link to={next.path}>{applyTypograf(next.title)} <ChevronRight width={size} height={size} /></Link>}\n        </span>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default Post\n"],"names":["_ref","_ref$id","id","className","_ref$width","width","_ref$height","height","_ref$strokeWidth","strokeWidth","_ref$strokeLinejoin","strokeLinejoin","_ref$strokeLinecap","strokeLinecap","_ref$color","color","viewBox","fill","stroke","d","navItemEmpty","pageContext","node","title","postedAt","srcPath","body","previous","next","size","Layout","pageTitle","applyTypograf","MDXRenderer","PostedAt","date","navItemLeft","Link","to","path","navItemRight","ChevronRight"],"sourceRoot":""}